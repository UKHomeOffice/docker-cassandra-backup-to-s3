#!/usr/bin/env bash

if [[ ! -z ${CASSANDRA_BACKUPS} ]]; then
  if [[ ! -d "${CASSANDRA_BACKUPS}" ]]; then echo "CASSANDRA_BACKUPS needs to be set to a directory"; exit 1; fi
  if [[ -z "${RETAIN_DAYS}" ]]; then echo "RETAIN_DAYS needs to be set"; exit 1; fi
else
  if [ -z "${AWS_ACCESS_KEY_ID}" ]; then echo "AWS_ACCESS_KEY_ID needs to be set (or use CASSANDRA_BACKUPS for local backups)"; exit 1; fi
  if [ -z "${AWS_SECRET_ACCESS_KEY}" ]; then echo "AWS_SECRET_ACCESS_KEY needs to be set"; exit 1; fi
  if [ -z "${AWS_KMS_ID}" ]; then echo "AWS_KMS_ID needs to be set"; exit 1; fi
  if [ -z "${AWS_BUCKET_NAME}" ]; then echo "AWS_BUCKET_NAME needs to be set"; exit 1; fi
  export AWS_ACCESS_KEY_ID="${AWS_ACCESS_KEY_ID}"
  export AWS_SECRET_ACCESS_KEY="${AWS_SECRET_ACCESS_KEY}"
  export AWS_KMS_ID="${AWS_KMS_ID}"
  export AWS_BUCKET_NAME="${AWS_BUCKET_NAME}"
fi
export KUBERNETES_POD_NAME="${KUBERNETES_POD_NAME:-localhost}"
export CASSANDRA_HOST="${CASSANDRA_HOST:-localhost}"
export CASSANDRA_PORT="${CASSANDRA_PORT:-7199}"
export CASSANDRA_KEYSPACE="${CASSANDRA_KEYSPACE:-draios}"
export CASSANDRA_DATA="${CASSANDRA_DATA:-/var/lib/cassandra/data}"
export CRON_TIME_SPEC="${CRON_TIME_SPEC:-'0    0       *       *       *'}"

echo "Setting schedule:${CRON_TIME_SPEC}"
crontab -l \
  | { cat; echo "${CRON_TIME_SPEC}       /usr/local/bin/backup >> /var/log/cron.log 2>&1"; } \
  | crontab -

touch /var/log/cron.log
crond && tail -f /var/log/cron.log
