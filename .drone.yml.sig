eyJhbGciOiJIUzI1NiJ9.cGlwZWxpbmU6CgogIGJ1aWxkX2RvY2tlcl9pbWFnZToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBidWlsZCAtdCBpbWFnZSAuCgogIGxhdGVzdF9pbWFnZV90b19xdWF5OgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyCiAgICBlbnZpcm9ubWVudDoKICAgICAgLSBET0NLRVJfSE9TVD10Y3A6Ly8xMjcuMC4wLjE6MjM3NQogICAgY29tbWFuZHM6CiAgICAgIC0gZG9ja2VyIGxvZ2luIC11PSJ1a2hvbWVvZmZpY2VkaWdpdGFsK2Ryb25lX2Nhc3NhbmRyYV9iYWNrdXAiIC1wPSR7RE9DS0VSX1BBU1NXT1JEfSBxdWF5LmlvCiAgICAgIC0gZG9ja2VyIHRhZyBpbWFnZSBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2Fzc2FuZHJhLWJhY2t1cC10by1zMzpsYXRlc3QKICAgICAgLSBkb2NrZXIgdGFnIGltYWdlIHF1YXkuaW8vdWtob21lb2ZmaWNlZGlnaXRhbC9jYXNzYW5kcmEtYmFja3VwLXRvLXMzOiR7RFJPTkVfQ09NTUlUX1NIQX0KICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2Fzc2FuZHJhLWJhY2t1cC10by1zMzpsYXRlc3QKICAgICAgLSBkb2NrZXIgcHVzaCBxdWF5LmlvL3VraG9tZW9mZmljZWRpZ2l0YWwvY2Fzc2FuZHJhLWJhY2t1cC10by1zMzoke0RST05FX0NPTU1JVF9TSEF9CiAgICB3aGVuOgogICAgICBldmVudDogcHVzaAogICAgICBicmFuY2g6IG1hc3RlcgoKICB0YWdfaW1hZ2VfdG9fcXVheToKICAgIGltYWdlOiBkb2NrZXI6MS4xMgogICAgZW52aXJvbm1lbnQ6CiAgICAgIC0gRE9DS0VSX0hPU1Q9dGNwOi8vMTI3LjAuMC4xOjIzNzUKICAgIGNvbW1hbmRzOgogICAgICAtIGRvY2tlciBsb2dpbiAtdT0idWtob21lb2ZmaWNlZGlnaXRhbCtkcm9uZV9jYXNzYW5kcmFfYmFja3VwIiAtcD0ke0RPQ0tFUl9QQVNTV09SRH0gcXVheS5pbwogICAgICAtIGRvY2tlciB0YWcgaW1hZ2UgcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2Nhc3NhbmRyYS1iYWNrdXAtdG8tczM6JHtEUk9ORV9UQUd9CiAgICAgIC0gZG9ja2VyIHB1c2ggcXVheS5pby91a2hvbWVvZmZpY2VkaWdpdGFsL2Nhc3NhbmRyYS1iYWNrdXAtdG8tczM6JHtEUk9ORV9UQUd9CiAgICB3aGVuOgogICAgICBldmVudDogdGFnCgpzZXJ2aWNlczoKICBkaW5kOgogICAgaW1hZ2U6IGRvY2tlcjoxLjEyLWRpbmQKICAgIHByaXZpbGVnZWQ6IHRydWUKICAgIGNvbW1hbmQ6CiAgICAgIC0gIi1zIgogICAgICAtICJvdmVybGF5Igo.DJ6PiempkRNJaw0BY_sVukd3fH--htcMRbnjUSx0rpY